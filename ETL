drop table if exists kdz_12_etl.flights; 

create table kdz_12_etl.flights as
select distinct
	year_flights,
	quarter_flights,
	month_flights,
	flight_date,
	dep_time,
	crs_dep_time,
	air_time,
	dep_delay_minutes,
	cancelled,
	cancellation_code,
	weather_delay,
	reporting_airline,
	tail_number,
	flight_number,
	distance,
	origin,
	dest,
	loaded_ts
from kdz_12_src.flights;

drop table if exists kdz_12_etl.weather; 

create table kdz_12_etl.weather as
select distinct
	icao_code,
	local_datetime,
	t_air_temperature,
	p0_sea_lvl,
	p_station_lvl,
	u_humidity,
	dd_wind_direction,
	ff_wind_speed,
	ff10_max_gust_value,
	ww_present,
	ww_recent,
	c_total_clouds,
	vv_horizontal_visibility,
	td_temperature_dewpoint,
	loaded_ts
from kdz_12_src.weather;

                                                                                
create table if not exists kdz_12_etl.load_flights(
loaded_ts timestamp not null primary key
);

drop table if exists kdz_12_etl.flights_min_max;
create table if not exists  kdz_12_etl.flights_min_max as
select
min(loaded_ts) as ts1,
max(loaded_ts) as ts2
from kdz_12_src.flights
where loaded_ts >= coalesce((select max(loaded_ts) from kdz_12_etl.load_flights), '1970-01-01');

drop table if exists kdz_12_etl.flights_01;
create table if not exists kdz_12_etl.flights_01 as
select distinct
year_flights,
	quarter_flights,
	month_flights,
	flight_date,
	dep_time,
	crs_dep_time,
	air_time,
	dep_delay_minutes,
	cancelled,
	cancellation_code,
	weather_delay,
	reporting_airline,
	tail_number,
	flight_number,
	distance,
	origin,
	dest
from kdz_12_src.flights, kdz_12_etl.flights_min_max
where loaded_ts > ts1 and loaded_ts <=ts2;

insert into kdz_12_staging.flights
(year_flights,
quarter_flights,
month_flights,
flight_date,
dep_time,
crs_dep_time,
air_time,
dep_delay_minutes,
cancelled,
cancellation_code,
weather_delay,
reporting_airline,
tail_number,
flight_number,
distance,
origin,
dest)
select 
year_flights,
quarter_flights,
month_flights,
flight_date,
dep_time,
crs_dep_time,
air_time,
dep_delay_minutes,
cancelled,
cancellation_code,
weather_delay,
reporting_airline,
tail_number,
flight_number,
distance,
origin,
dest
from kdz_12_etl.flights_01
on conflict(flight_date, flight_number, origin, dest, crs_dep_time) do update set 
year_flights = excluded.year_flights,
quarter_flights = excluded.quarter_flights,
month_flights = excluded.month_flights,
flight_date = excluded.flight_date,
dep_time = excluded.dep_time,
crs_dep_time = excluded.crs_dep_time,
air_time = excluded.air_time,
dep_delay_minutes = excluded.dep_delay_minutes,
cancelled = excluded.cancelled,
cancellation_code = excluded.cancellation_code,
weather_delay = excluded.weather_delay,
reporting_airline = excluded.reporting_airline,
tail_number = excluded.tail_number,
flight_number = excluded.flight_number,
distance = excluded.distance,
origin = excluded.origin,
dest = excluded.dest,
loaded_ts = now()
;

delete from kdz_12_etl.load_flights
where exists(select 1 from kdz_12_etl.flights_min_max);

insert into kdz_12_etl.load_flights(loaded_ts)
select ts2
from kdz_12_etl.flights_min_max
where exists(select 1 from kdz_12_etl.flights_min_max);


create table if not exists kdz_12_etl.load_weather(
loaded_ts timestamp not null primary key -- маркер последнего обработанного значения
);


drop table if exists kdz_12_etl.weather_min_max;
create table if not exists  kdz_12_etl.weather_min_max as
select
min(loaded_ts) as ts1,
max(loaded_ts) as ts2
from kdz_12_src.weather
where loaded_ts >= coalesce((select max(loaded_ts) from kdz_12_etl.load_weather), '1970-01-01');


drop table if exists kdz_12_etl.weather_01;
create table if not exists kdz_12_etl.weather_01 as
select distinct
icao_code,
	local_datetime,
	t_air_temperature,
	p0_sea_lvl,
	p_station_lvl,
	u_humidity,
	dd_wind_direction,
	ff_wind_speed,
	ff10_max_gust_value,
	ww_present,
	ww_recent,
	c_total_clouds,
	vv_horizontal_visibility,
	td_temperature_dewpoint
from kdz_12_src.weather, kdz_12_etl.weather_min_max
where loaded_ts > ts1 and loaded_ts <=ts2;


insert into kdz_12_staging.weather
(icao_code,
	local_datetime,
	t_air_temperature,
	p0_sea_lvl,
	p_station_lvl,
	u_humidity,
	dd_wind_direction,
	ff_wind_speed,
	ff10_max_gust_value,
	ww_present,
	ww_recent,
	c_total_clouds,
	vv_horizontal_visibility,
	td_temperature_dewpoint)
select 
icao_code,
	local_datetime,
	t_air_temperature,
	p0_sea_lvl,
	p_station_lvl,
	u_humidity,
	dd_wind_direction,
	ff_wind_speed,
	ff10_max_gust_value,
	ww_present,
	ww_recent,
	c_total_clouds,
	vv_horizontal_visibility,
	td_temperature_dewpoint
from kdz_12_etl.weather_01
on conflict(icao_code, local_datetime) do update set 
icao_code = excluded.icao_code,
	local_datetime = excluded.local_datetime,
	t_air_temperature = excluded.t_air_temperature,
	p0_sea_lvl = excluded.p0_sea_lvl,
	p_station_lvl = excluded.p_station_lvl,
	u_humidity = excluded.u_humidity,
	dd_wind_direction = excluded.dd_wind_direction,
	ff_wind_speed = excluded.ff_wind_speed,
	ff10_max_gust_value = excluded.ff10_max_gust_value,
	ww_present = excluded.ww_present,
	ww_recent = excluded.ww_recent,
	c_total_clouds = excluded.c_total_clouds,
	vv_horizontal_visibility = excluded.vv_horizontal_visibility,
	td_temperature_dewpoint = excluded.td_temperature_dewpoint,
loaded_ts = now()
;

delete from kdz_12_etl.load_weather
where exists(select 1 from kdz_12_etl.weather_min_max);

insert into kdz_12_etl.load_weather(loaded_ts)
select ts2
from kdz_12_etl.weather_min_max
where exists(select 1 from kdz_12_etl.weather_min_max);

drop table if exists kdz_12_etl.weather_01;
